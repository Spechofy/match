name: CI match microservice

on:
  push:
    branches:
      - develop
      - feature/*
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t matchs-fastapi .

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install flake8
        run: pip install flake8

      - name: Run Flake8 Linter
        run: flake8 --max-line-length=120 --exclude=venv

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Start FastAPI Container
        run: |
          docker run -d -p 8000:8000 --name fastapi-cont matchs-fastapi
          echo "Waiting for FastAPI to be ready..."
          for i in {1..10}; do
            if curl -s http://localhost:8000; then
              echo "FastAPI is ready"
              break
            fi
            echo "Waiting..."
            sleep 3
          done

      - name: Run Unit Tests
        run: |
          docker exec fastapi-cont pytest --junitxml=report.xml

      - name: Clean up
        run: |
          docker rm -f fastapi-cont

  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Sonar Scanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=matchs-fastapi \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
